---
- name: Ensure VM storage directories exist
  file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  with_items:
    - "{{ storage_path | default('/var/lib/libvirt/images') }}"
    - "{{ vm_directory | default('/opt/vms') }}"
    - "{{ vm_images_directory | default('/opt/vm_images') }}"
    - "{{ vm_config_directory | default('/opt/vm_configs') }}"
    - "{{ vm_templates_directory | default('/opt/vm_templates') }}"

- name: Check for high-performance storage devices
  shell: lsblk -o NAME,TYPE,MOUNTPOINT,SIZE -J
  register: storage_devices
  changed_when: false

- name: Configure storage for better performance (optional)
  block:
    - name: Create a VM storage volume group (if dedicated device available)
      lvg:
        vg: vg_vms
        pvs: "{{ optimize_io_device }}"
      when: optimize_io_device is defined
      register: vg_created

    - name: Create a logical volume for VM storage
      lvol:
        vg: vg_vms
        lv: lv_vms
        size: 100%FREE
      when: vg_created is defined and vg_created.changed
      register: lv_created

    - name: Format the logical volume
      filesystem:
        fstype: xfs
        dev: /dev/vg_vms/lv_vms
      when: lv_created is defined and lv_created.changed

    - name: Mount the logical volume
      mount:
        path: "{{ vm_directory | default('/opt/vms') }}"
        src: /dev/vg_vms/lv_vms
        fstype: xfs
        state: mounted
      when: lv_created is defined and lv_created.changed
  when: optimize_io | default(false) and optimize_io_device is defined

- name: Configure libvirt storage pools
  block:
    - name: Define default storage pool
      virt_pool:
        command: define
        name: default
        xml: |
          <pool type='dir'>
            <name>default</name>
            <target>
              <path>{{ storage_path | default('/var/lib/libvirt/images') }}</path>
            </target>
          </pool>
      register: default_pool

    - name: Start default storage pool
      virt_pool:
        state: active
        name: default
      when: default_pool.changed

    - name: Enable autostart for default storage pool
      virt_pool:
        autostart: yes
        name: default

    - name: Define VM storage pool
      virt_pool:
        command: define
        name: vm_storage
        xml: |
          <pool type='dir'>
            <name>vm_storage</name>
            <target>
              <path>{{ vm_directory | default('/opt/vms') }}</path>
            </target>
          </pool>
      register: vm_pool

    - name: Start VM storage pool
      virt_pool:
        state: active
        name: vm_storage
      when: vm_pool.changed

    - name: Enable autostart for VM storage pool
      virt_pool:
        autostart: yes
        name: vm_storage

    - name: Define VM templates storage pool
      virt_pool:
        command: define
        name: vm_templates
        xml: |
          <pool type='dir'>
            <name>vm_templates</name>
            <target>
              <path>{{ vm_templates_directory | default('/opt/vm_templates') }}</path>
            </target>
          </pool>
      register: vm_templates_pool

    - name: Start VM templates storage pool
      virt_pool:
        state: active
        name: vm_templates
      when: vm_templates_pool.changed

    - name: Enable autostart for VM templates storage pool
      virt_pool:
        autostart: yes
        name: vm_templates

- name: Configure system for improved VM I/O performance
  block:
    - name: Set I/O scheduler to mq-deadline for better VM performance
      lineinfile:
        path: /etc/default/grub
        regexp: '^GRUB_CMDLINE_LINUX_DEFAULT="(.*)"'
        line: 'GRUB_CMDLINE_LINUX_DEFAULT="\1 elevator=mq-deadline"'
        backrefs: yes
      register: grub_updated
      failed_when: false

    - name: Update GRUB if configuration changed
      command: update-grub
      when: grub_updated.changed

    - name: Configure I/O scheduler for current session
      shell: echo mq-deadline > /sys/block/{{ item }}/queue/scheduler
      with_items:
        - "sda"  # Default disk, might need to be adjusted
      failed_when: false
      changed_when: false

    - name: Install thin-provisioning-tools for LVM
      apt:
        name: thin-provisioning-tools
        state: present
  when: optimize_io | default(true) 